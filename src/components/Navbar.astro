---
import MoonIcon from "@icons/Moon.astro";
import SunIcon from "@icons/Sun.astro";
import HamburgerIcon from "@icons/Hamburger.astro";
import XIcon from "@icons/X.astro";
const links = [
  {
    name: "Inicio",
    href: "/#home",
  },
  {
    name: "Trabajos",
    href: "/#works",
  },
  {
    name: "Cont√°ctame",
    href: "/#contact",
  },
];
---

<header
  class="bg-primary dark:bg-primary-dark h-[10dvh] md:h-[12vh] flex items-center justify-between ps-8 fixed top-0 w-full z-10 border-b border-primary-dark/10 dark:border-primary/40 shadow-xl"
>
  <input type="checkbox" class="hidden peer" id="hamburger" />
  <label
    for="hamburger"
    class="block relative sm:hidden z-50 peer-checked:[&>.x]:opacity-100 peer-checked:[&>.h]:opacity-0"
  >
    <HamburgerIcon
      class="absolute text-primary-dark dark:text-havelock-blue-100 h"
    />
    <XIcon
      class="opacity-0 text-primary-dark dark:text-havelock-blue-100 x"
    />
  </label>
  <nav
    class="w-[100dvw] h-[100dvh] absolute inset-0 z-40 bg-primary dark:bg-primary-dark sm:bg-transparent -translate-y-full peer-checked:translate-y-0 transition-transform
    sm:w-auto sm:h-auto sm:static sm:translate-y-0"
  >
    <ul
      class="flex flex-col items-center justify-center gap-y-10 h-full sm:flex-row sm:w-auto"
    >
      {
        links.map((link) => {
          const { name, href } = link;
          return (
            <li>
              <a
                class="px-3 py-2 mx-2 uppercase font-bold rounded-lg text-havelock-blue-950 dark:text-havelock-blue-100 hover:bg-havelock-blue-400/30 dark:hover:bg-havelock-blue-900"
                href={href}
              >
                {name}
              </a>
            </li>
          );
        })
      }
    </ul>
  </nav>
  <div
    class="border-s border-black/30 dark:border-white/30 px-5 relative flex py-1"
  >
    <button
      id="themeToggle"
      class="inline-flex hover:scale-110 transition-transform"
    >
      <MoonIcon
        class="opacity-100 dark:opacity-0 dark:-rotate-45 size-7 text-neutral-700 fill-neutral-700 transition-transform"
      />
      <SunIcon
        class="absolute opacity-0 dark:opacity-100 dark:rotate-45 size-7 text-white transition-transform"
      />
    </button>
  </div>
</header>

<script is:inline>
  const getThemePreference = () => {
    const theme = localStorage.getItem("theme");
    if (typeof localStorage !== "undefined" && theme) return theme;
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList.toggle("dark", isDark);
  const button = document.getElementById("themeToggle");
  button.addEventListener("click", handleToggleClick);
  const hamburger = document.getElementById("hamburger");
  const links = document.querySelectorAll("a");
  links.forEach((link) => {
    link.addEventListener("click", () => {
      if (hamburger instanceof HTMLInputElement && hamburger.checked) {
        hamburger.checked = false;
      }
    });
  });
</script>
